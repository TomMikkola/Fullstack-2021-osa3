{"version":3,"sources":["services/puhelinluettelo.js","components/Notification.js","components/Filter.js","components/Form.js","components/Person.js","components/Header.js","App.js","index.js"],"names":["url","functions","getAll","axios","get","then","response","data","createPerson","person","post","deletePerson","id","delete","updatePerson","newPerson","put","Notification","props","message","style","fontSize","border","borderRadius","backgroundColor","paddingLeft","className","task","Filter","filterPersons","onChange","Form","addNewName","newName","updateNameInput","newNumber","updateNumberInput","onSubmit","value","type","clickDeletePerson","persons","setPersons","notificationMessage","setNotificationMessage","window","confirm","name","Services","filter","setTimeout","catch","Person","map","number","onClick","Header","text","App","useState","setNewName","setNewNumber","setFilter","useEffect","event","search","target","toLocaleLowerCase","preventDefault","personFound","find","updatedPersons","error","createdPerson","concat","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9144140.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(url)\r\n    return request.then( response => response.data ) \r\n}\r\n\r\nconst createPerson = (person) => {\r\n    const request = axios.post(url, person)\r\n    return request.then( response => response.data )\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(url+`/${id}`)\r\n    return request.then( response => response )\r\n}\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n    const request = axios.put(url+`/${id}`, newPerson)\r\n    return request.then( response => response.data )\r\n}\r\n\r\nconst functions = {\r\n    getAll,\r\n    createPerson,\r\n    deletePerson,\r\n    updatePerson\r\n}\r\n\r\nexport default functions","const Notification = ({props}) => {\r\n\r\n    const notificationStyle = {\r\n        fontSize: '2em',\r\n        border: '10px solid transparent',\r\n        borderRadius: '10px',\r\n        backgroundColor: 'lightgrey',\r\n        paddingLeft: '10px'\r\n    }\r\n\r\n    if( props.message === '' ){\r\n        return null\r\n    } else {\r\n        return(\r\n            <div style={notificationStyle} className={`notification ${props.task}`}>\r\n                {props.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","const Filter = ({filterPersons}) => {\r\n    return(\r\n      <>\r\n        filter shown with <input onChange={filterPersons}/>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Filter","const Form = (props) => {\r\n    const {addNewName, newName, updateNameInput, newNumber, updateNumberInput} = props\r\n  \r\n    return(\r\n      <form onSubmit={addNewName}>\r\n          <div> Name: <input value={newName} onChange={updateNameInput}/> </div>\r\n          <div> Number: <input value={newNumber} onChange={updateNumberInput}/> </div>\r\n          <div> <button type=\"submit\">Add</button> </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form","import Services from '../services/puhelinluettelo'\r\n\r\nconst Person = ({persons, setPersons, notificationMessage, setNotificationMessage}) =>{\r\n\r\n    return(\r\n      persons.map( person => {\r\n        return(\r\n          <div key={person.name}>{person.name} {person.number} <button onClick={ () => clickDeletePerson(person, persons, setPersons, person.id, notificationMessage, setNotificationMessage)} >delete</button></div>\r\n        )\r\n      })\r\n    )\r\n}\r\n\r\nconst clickDeletePerson = (person, persons, setPersons, id, notificationMessage, setNotificationMessage) => {\r\n\r\n    if( window.confirm(`Delete ${person.name}?`) ){\r\n      Services\r\n      .deletePerson(id)\r\n      .then( () => {\r\n        setPersons( persons.filter( person => person.id !== id ? person : null) )\r\n        setNotificationMessage({...notificationMessage, message: `Deleted ${person.name}`, task: 'delete'})\r\n        setTimeout( () => {\r\n          setNotificationMessage({message: '', task: ''})\r\n        }, 3000)\r\n      })\r\n      .catch( () => {\r\n        setNotificationMessage({...notificationMessage, message: `Information of ${person.name} has already been removed from the server`, task: 'error' })\r\n        setTimeout( () => {\r\n          setNotificationMessage({message: '', task: ''})\r\n        }, 3000)\r\n      })\r\n    }\r\n}\r\n\r\nexport default Person","const Header = ({text}) => ( <h2>{text}</h2> )\r\n\r\nexport default Header","import React, {useEffect, useState} from 'react';\nimport Services from './services/puhelinluettelo'\nimport Notification from './components/Notification';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Person from './components/Person';\nimport Header from './components/Header'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState({message: '', task: ''})\n\n  useEffect( () => {\n    Services\n      .getAll()\n      .then( response => {\n        setPersons( response )\n      })\n  }, [])\n\n  const addNewName = (event) => {\n    event.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    const personFound = persons.find( person => person.name.toLocaleLowerCase() === newName.toLocaleLowerCase() )\n\n    if( personFound ){\n        \n      if( window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) ){\n                \n        Services\n          .updatePerson(personFound.id, newPerson)\n          .then( response => {\n            const updatedPersons = persons.map( person => person.id !== personFound.id ? person : response )\n            setPersons(updatedPersons)\n            setNotificationMessage({...notificationMessage, message: `Updated ${newName}`, task: 'update'})\n            setTimeout( () => {\n              setNotificationMessage({message: '', task: ''})\n            }, 3000)\n          } )\n          .catch( error => {\n            setNotificationMessage({...notificationMessage, message: error.response.data.error, task: 'error' })\n            setTimeout( () => {\n              setNotificationMessage({message: '', task: ''})\n            }, 3000)\n          })\n      }\n    } else {\n      \n      Services\n        .createPerson( newPerson )\n        .then( createdPerson => {\n          const updatedPersons = persons.concat(createdPerson)\n          setPersons( updatedPersons )\n          setNotificationMessage({...notificationMessage, message: `Added ${newName}`, task: 'add'})\n          setTimeout( () => {\n            setNotificationMessage({message: '', task: ''})\n          }, 3000)\n        })\n        .catch( error => {\n          setNotificationMessage({...notificationMessage, message: error.response.data.error, task: 'error' })\n          setTimeout( () => {\n            setNotificationMessage({message: '', task: ''})\n          }, 3000)\n        })\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const updateNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const updateNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const filterPersons = (event) => {\n    let search = event.target.value.toLocaleLowerCase()\n    setFilter(search)\n  }\n\n  return (\n    <div>\n      <Header text='Phonebook' />\n      <Notification props={notificationMessage} />\n      <Filter filterPersons={filterPersons}/>\n      \n      <Header text='Add a new' />\n      <Form addNewName={addNewName} newName={newName} updateNameInput={updateNameInput} newNumber={newNumber} updateNumberInput={updateNumberInput} />\n      \n      <Header text='Numbers' />\n      <Person persons={ persons.filter(person => person.name.toLocaleLowerCase().includes(filter)) } setPersons={setPersons} notificationMessage={notificationMessage} setNotificationMessage={setNotificationMessage} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}